library(shiny)
runExample("06_tabsets") # tabbed panels
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("01_hello") # a histogram
runExample("04_mpg") # global variables
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
data1=read.table(file.choose(), header=T)
attach(data1)
data1=read.table(file.choose(), header=T)
attach(data1)
#-------
View(data1)
i=c(2:10)
resultado=matrix(0,1,length(i))
grouped <- groupedData(cholst ~ year|newid, data = data1,
order.groups = F)
ctrl=lmeControl(opt='optim')
hc=hclust(dist(data1$cholst),"ave")
#------
##______________AGRUPACIONES___________
for (k in 2:9){
memb <- cutree(hc, k)
memb=as.numeric(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
}
resultado=as.matrix(resultado)
x=2:9
RESUL=resultado[,]
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
summary(m)
m<-lme(cholst ~ sex+year,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
summary(m)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
R2
resultado=as.matrix(resultado)
maxx=max(resultado)
posis=which(resultado[1,]==maxx)
memb <- cutree(hc, posis)
memb=as.numeric(memb)
maxx
for (k in 2:9){
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
}
resultado=as.matrix(resultado)
maxx=max(resultado)
maxx
posis=which(resultado[1,]==maxx)
memb <- cutree(hc, posis)
memb=as.numeric(memb)
x=2:9
RESUL=resultado[,]
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
m<-lme(cholst ~ sex+year,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
summary(m)
memb=as.factor(memb)
x=2:9
RESUL=resultado[,]
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
m<-lme(cholst ~ sex+year,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
summary(m)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
summary(m)
m<-lme(cholst ~ year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
summary(m)
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
k=2
memb <- cutree(hc, k)
memb=as.factor(memb)
memb
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
resultado
resultado
k=2
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
resultado
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
hc=hclust(dist(data1$cholst),"ave")
#------
##______________AGRUPACIONES___________
for (k in 2:9){
k=2
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
}
resultado=as.matrix(resultado)
resultado
resultado=as.matrix(resultado)
maxx=max(resultado)
posis=which(resultado[1,]==maxx)
memb <- cutree(hc, posis)
memb=as.factor(memb)
x=2:9
RESUL=resultado[,]
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
RESUL
resultado[k,]=R2
resultado[,k]=R2
for (k in 2:9){
k=2
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[k,]=R2
}
resultado
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
i=c(2:10)
resultado=matrix(0,1,length(i))
grouped <- groupedData(cholst ~ year|newid, data = data1,
order.groups = F)
resultado
resultado
resultado
grouped <- groupedData(cholst ~ year|newid, data = data1,
order.groups = F)
ctrl=lmeControl(opt='optim')
hc=hclust(dist(data1$cholst),"ave")
#------
##______________AGRUPACIONES___________
for (k in 2:9){
k=2
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
}
resultado=as.matrix(resultado)
resultado
for (k in 2:9){
memb <- cutree(hc, k)
memb=as.factor(memb)
grouped$sex=as.factor(grouped$sex)
m<-lme(cholst ~ sex+year+memb,
random = ~ year|newid,
corr=corCompSymm(0.1),method="REML",data =grouped,control=ctrl)
yest = fitted(m)
y=grouped$cholst
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
R2 = 1 - sse/ssr
resultado[,k]=R2
}
resultado=as.matrix(resultado)
resultado
resultado=as.matrix(resultado)
maxx=max(resultado)
posis=which(resultado[1,]==maxx)
memb <- cutree(hc, posis)
memb=as.factor(memb)
x=2:9
RESUL=resultado[,]
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
resultado
resultado
RESUL[-1]
plot(x,RESUL[-1],type="b",col=2,lwd=3)
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
library(shiny)
system.file("examples", package="shiny")
runExample("01_hello") # a histogram
runExample("02_text") # tables and data frames
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("02_text") # tables and data frames
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("02_text") # tables and data frames
runExample("03_reactivity") # a reactive expression
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("02_text") # tables and data frames
runExample("03_reactivity") # a reactive expression
runExample("04_mpg") # global variables
runExample("05_sliders") # slider bars
runExample("06_tabsets") # tabbed panels
runExample("06_tabsets") # tabbed panels
runExample("07_widgets") # help text and submit buttons
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
require(zoo)
require(lmtest)
require(car)
require(sn)
#### jugando con las distribuciones
##### normal sesgada y t sesgada
### distribución normal sesgada____________
###SUPERPONIENDO GRAFICOS
###manual superponer graficos
##jugando con el tamaño de muestra
par(mfrow=c(1,1))
n1=10
n2=100
n3=1000
N2
xi=10
oo=10
aa=5
y1=rsn(n1,xi,oo,aa)
y2=rsn(n2,xi,oo,aa)
y3=rsn(n3,xi,oo,aa)
plot(density(y1),col=2,lwd=4,ylim=c(0,0.07),xlim=c(0,50),
lty=1,cex.axis=2)
lines(density(y2),col=3,lwd=4,lty=2)
lines(density(y3),col=4,lwd=4,lty=3)
legend("topright", legend = c("10 ", "100","1000"),col=2:4,
lty = 2:4,title = "Tamaño de muestra")
#### ESTE HACE LA SIMULACIÒN PERO....
di=2
for(n in c("10","100","1000")) {
if(di==1) Err=rnorm(n,10) else if(di==2)
Err=rsn(n,xi,oo,aa) else if(di==3)
Err=rst(n,0,10,5,2) else Err=0
par(mfrow = c(1,1))
plot(0:1,ylim=c(0,0.08),xlim=c(4,45))
lines(density(Err),col=3:4,lty = 2:4)
legend("topright", legend = c("10 ", "100","1000"),col=2:4,
lty = 2:4,title = "Tamaño de muestra")}
}
### ESTE HACE LA SIMULACIÒN PERO NO LE APLICA EL COLOR
par(mfrow = c(1,1))
matplot(0:1,ylim=c(0,0.1),xlim=c(4,45))
for(n in c("10","100","1000")) {
y=rsn(n,xi,oo,aa)
lines(density(y),col=1:4,lty = c(2:4))
legend("topright", legend = c("10 ", "100","1000"),col=2:4,
lty = 2:4,title = "Tamaño de muestra")}
###SUPERPONIENDO GRAFICOS
###manual superponer graficos
##jugando con el tamaño de muestra
par(mfrow=c(1,1))
n3=5000
xi=15
oo=10
aa=5
y1=rnorm(n3,10,10)
y2=rst(n3,10,oo,aa)
y3=rsn(n3,xi=10,oo,aa)
plot(density(y1),col=2,lwd=3,ylim=c(0,0.08),xlim=c(-40,60),lty=1)
lines(density(y2),col=3,lwd=4,lty=2)
lines(density(y3),lwd=4,lty=4)
legend("topleft",c("normal", "t sesgada","normal sesgada"),
col=2:4,lty = 1:3,)
plot(density(y1),col=2,lwd=3,ylim=c(0,0.08),xlim=c(-40,60),lty=1)
lines(density(y2),col=3,lwd=4,lty=2)
lines(density(y3),lwd=4,lty=4)
legend("topleft",c("normal", "t sesgada","normal sesgada"),
col=2:4,lty = 1:3,)
x <- seq(-3,3,length=15)
xi <- c(0.5, -1)
Omega <- diag(2)
Omega[2,1] <- Omega[1,2] <- 0.5
alpha <- c(2,-10)
plot(density(rmsn(4000, xi, Omega, alpha)),
ylim=c(0,0.55),xlim=c(-8,8),col=2,lwd=4,lty=1,cex.axis=2)
lines(density(rnorm(4000,0,2)),col=3,lwd=4,lty=3)
lines(density(rmst(4000, xi=rep(0,length(alpha)),
Omega, alpha, nu=Inf)),col=4,lwd=4,lty=2)
legend("topleft", legend = c("normal sesgada", "normal","t sesgada"),
col=2:4,lwd=4,lty = 1:3)
if (!require('shiny')) install.packages('shiny')
shiny::runGitHub(repo='semilleroApps', username='fhernanb', subdir='samplesize')
if (!require('shiny')) install.packages('shiny')
shiny::runGitHub(repo='semilleroApps', username='fhernanb', subdir='samplesize')
shiny::runGitHub(repo='semilleroApps', username='fhernanb', subdir='samplesize')
shiny::runGitHub(repo='semilleroApps', username='fhernanb',
subdir='binomial')
shiny::runGitHub(repo='semilleroApps', username='fhernanb',
subdir='samplesize')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/tamaño muestral')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/tamaño muestral')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/tamaño muestral')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/tamaño muestral')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
system.file("examples", package="shiny")
runExample("01_hello") # a histogram
runExample("03_reactivity") # a reactive expression
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("04_mpg") # global variables
runExample("05_sliders") # slider bars
runExample("06_tabsets") # tabbed panels
runExample("06_tabsets") # tabbed panels
runExample("07_widgets") # help text and submit buttons
runExample("03_reactivity") # a reactive expression
runExample("04_mpg") # global variables
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
runExample("04_mpg") # global variables
shiny::runGitHub(repo='semilleroApps', username='fhernanb',
subdir='onevariable')
shiny::runGitHub(repo='semilleroApps', username='fhernanb',
subdir='onevariable')
shiny::runGitHub(repo='semilleroApps', username='fhernanb',
subdir='onevariable')
runGitHub(rep='semilleroApps', us='fhernanb', su='onevariable')
runGitHub(rep='semilleroApps', us='fhernanb', su='onevariable')
}
sliderInput("control", "Controller:", min=0, max=20, value=10,
)
require(snowfall)
sfInit(parallel=TRUE, cpus=4, type="SOCK")
sfSource(file.choose())
sfClusterEval(ls())
system.time(sfSapply(seq(100,8000,by=200),simulacion2))
system.time(sfSapply(seq(10000,80000,by=10000),simulacion2))
?write.csv
require(snowfall)
sfInit(parallel=TRUE, cpus=4, type="SOCK")
#Cargar funciones en los procesadores
sfSource(file.choose())
sfClusterEval(ls())
system.time(sfSapply(seq(10000,80000,by=10000),simulacion2))
sfLibrary(sn)
sfClusterEval(ls())
install.packages("shinyIncubator")
install.packages("shinyIncubator")
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/Proyecto-shiny-Eafit2/Shiny-Eafit')
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
library(sn)
require(car)
library(tseries)
library(nlme)
library(lmtest)
library(blme)
library(mvtnorm)
library(mnormt)
library(Hmisc)
framin <- read.table(file.choose(),h=T)
attach(framin)
names(framin)
head(framin)
length(framin)
summary(age)
library(MuMIn)
library(nlme)
data(Orthodont, package = "nlme")
fm1 <- lme(distance ~ Sex * age, ~ 1 | Subject, data = Orthodont)
r.squaredGLMM(fm1)
r.squaredLR(fm1)
r.squaredLR(fm1, null.RE = TRUE)
T = length(y)
attach(Orthodont)
y=distance
T = length(y)
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
yest=fitted(fm1)
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
mse = sse/(T-k)
R2 = 1 - sse/ssr
R2
r.squaredGLMM(fm1)
shiny::runApp('C:/Users/Joha/Desktop/APLICACIONES SEMILLERO/aplicación tesis')
shiny::runApp()
runApp()
shiny::runApp()
runApp()
